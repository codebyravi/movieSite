{"version":3,"sources":["webpack:///./src/app/categories/categories-add-modal/categories-add-modal.component.html","webpack:///./src/app/categories/categories-add-modal/categories-add-modal.component.scss","webpack:///./src/app/categories/categories-add-modal/categories-add-modal.component.ts","webpack:///./src/app/categories/categories-delete-modal/categories-delete-modal.component.html","webpack:///./src/app/categories/categories-delete-modal/categories-delete-modal.component.scss","webpack:///./src/app/categories/categories-delete-modal/categories-delete-modal.component.ts","webpack:///./src/app/categories/categories-routing.module.ts","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.scss","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/categories/categories.module.ts"],"names":[],"mappings":"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","file":"app-categories-categories-module.js","sourcesContent":["module.exports = \"<h1 mat-dialog-title>{{'Categories-add.Title' | translate}}</h1>\\n<div mat-dialog-content>\\n  <p>{{'Categories-add.Content' | translate}}</p>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"data.name\\\">\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">{{'Btn-cancel' | translate}}</button>\\n  <button mat-button [mat-dialog-close]=\\\"data.name\\\" cdkFocusInitial>OK</button>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1hZGQtbW9kYWwvY2F0ZWdvcmllcy1hZGQtbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n\n@Component({\n  selector: 'app-categories-add-modal',\n  templateUrl: './categories-add-modal.component.html',\n  styleUrls: ['./categories-add-modal.component.scss']\n})\nexport class CategoriesAddModalComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<CategoriesAddModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{'Categories-delete.Title' | translate}}</h1>\\n<div mat-dialog-content>\\n  <p>{{'Categories-delete.Content' | translate}}</p>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"data.name\\\">\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">{{'Btn-cancel' | translate}}</button>\\n  <button mat-button [mat-dialog-close]=\\\"data.name\\\" cdkFocusInitial>OK</button>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1kZWxldGUtbW9kYWwvY2F0ZWdvcmllcy1kZWxldGUtbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-categories-delete-modal',\n  templateUrl: './categories-delete-modal.component.html',\n  styleUrls: ['./categories-delete-modal.component.scss']\n})\nexport class CategoriesDeleteModalComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<CategoriesDeleteModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CategoriesComponent } from './categories.component';\n\nconst routes: Routes = [\n  { path: '', component: CategoriesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriesRoutingModule { }\n","module.exports = \"<div class=\\\"loading-shade\\\" *ngIf=\\\"isLoadingResults\\\">\\n  <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\n</div>\\n<ng-template [ngIf]=\\\"!isLoadingResults\\\">\\n  <h2>{{ \\\"Categories.Title\\\" | translate }}</h2>\\n  <button\\n    class=\\\"btn-add-category\\\"\\n    mat-icon-button\\n    (click)=\\\"addCategoryDialog()\\\"\\n    matTooltip=\\\"{{ 'Categories.Btn-add' | translate }}\\\"\\n  >\\n    <mat-icon>add</mat-icon>\\n  </button>\\n  <button\\n    class=\\\"btn-delete-category\\\"\\n    mat-icon-button\\n    (click)=\\\"deleteCategoryDialog()\\\"\\n    matTooltip=\\\"{{ 'Categories.Btn-delete' | translate }}\\\"\\n  >\\n    <mat-icon>delete_forever</mat-icon>\\n  </button>\\n  <mat-tab-group\\n    class=\\\"categories__tab\\\"\\n    #tabGroup\\n    (selectedTabChange)=\\\"tabChanged($event)\\\"\\n  >\\n    <mat-tab label=\\\"{{ 'Categories.Favorites' | translate }}\\\">\\n      <div *ngIf=\\\"movies.length > 0; else noData\\\">\\n        <mat-nav-list *ngFor=\\\"let movie of movies\\\">\\n          <a mat-list-item [routerLink]=\\\"['/movie', movie.movieId]\\\">\\n            <div\\n              matListAvatar\\n              class=\\\"icon-container\\\"\\n              [ngStyle]=\\\"{\\n                'background-image':\\n                  'url(' +\\n                  'https://image.tmdb.org/t/p/original' +\\n                  movie.poster_path +\\n                  ')'\\n              }\\\"\\n            >\\n              <mat-icon *ngIf=\\\"!movie.poster_path\\\" class=\\\"icon-movie\\\"\\n                >movie</mat-icon\\n              >\\n            </div>\\n            <h3 matLine>{{ movie.original_title }}</h3>\\n            <p matLine>{{ movie.release_date | date }}</p>\\n          </a>\\n          <mat-action-list>\\n            <button mat-icon-button (click)=\\\"shareDialog(movie)\\\">\\n              <mat-icon>share</mat-icon>\\n            </button>\\n            <button\\n              mat-icon-button\\n              (click)=\\\"deleteMovieFromFavorites(movie.movieId)\\\"\\n            >\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n          </mat-action-list>\\n          <div class=\\\"actions\\\">\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n              <button mat-menu-item (click)=\\\"shareDialog(movie)\\\">\\n                <mat-icon>share</mat-icon>\\n                <span>{{ \\\"Btn-share\\\" | translate }}</span>\\n              </button>\\n              <button\\n                mat-menu-item\\n                (click)=\\\"deleteMovieFromFavorites(movie.movieId)\\\"\\n              >\\n                <mat-icon>delete</mat-icon>\\n                <span>{{ \\\"Btn-delete\\\" | translate }}</span>\\n              </button>\\n            </mat-menu>\\n          </div>\\n        </mat-nav-list>\\n      </div>\\n      <ng-template #noData>\\n        <h3>\\n          {{ \\\"Categories.No favorites\\\" | translate }}\\n          <mat-icon>sentiment_very_dissatisfied</mat-icon>\\n        </h3>\\n      </ng-template>\\n    </mat-tab>\\n    <mat-tab *ngFor=\\\"let category of categories\\\" [label]=\\\"category\\\">\\n      <div *ngIf=\\\"movies.length > 0; else noData\\\">\\n        <mat-nav-list *ngFor=\\\"let movie of movies\\\">\\n          <a mat-list-item [routerLink]=\\\"['/movie', movie.movieId]\\\">\\n            <div\\n              matListAvatar\\n              class=\\\"icon-container\\\"\\n              [ngStyle]=\\\"{\\n                'background-image':\\n                  'url(' +\\n                  'https://image.tmdb.org/t/p/original' +\\n                  movie.poster_path +\\n                  ')'\\n              }\\\"\\n            >\\n              <mat-icon *ngIf=\\\"!movie.poster_path\\\" class=\\\"icon-movie\\\"\\n                >movie</mat-icon\\n              >\\n            </div>\\n            <h3 matLine>{{ movie.original_title }}</h3>\\n            <p matLine>{{ movie.release_date | date }}</p>\\n          </a>\\n          <mat-action-list>\\n            <button mat-icon-button (click)=\\\"shareDialog(movie)\\\">\\n              <mat-icon>share</mat-icon>\\n            </button>\\n            <button\\n              mat-icon-button\\n              (click)=\\\"deleteMovieFromCategory(movie.category, movie.movieId)\\\"\\n            >\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n          </mat-action-list>\\n        </mat-nav-list>\\n      </div>\\n      <ng-template #noData>\\n        <h3>\\n          {{ \\\"Categories.No movies\\\" | translate }}\\n          <mat-icon>sentiment_very_dissatisfied</mat-icon>\\n        </h3>\\n      </ng-template>\\n    </mat-tab>\\n  </mat-tab-group>\\n</ng-template>\\n\"","module.exports = \".btn-add-category,\\n.btn-delete-category {\\n  color: white; }\\n\\n.categories__tab .mat-nav-list {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center; }\\n\\n.categories__tab a.mat-list-item {\\n  flex: 1; }\\n\\n.categories__tab a.mat-list-item:hover {\\n    background: #e3e0cf; }\\n\\n.categories__tab .mat-list {\\n  display: none; }\\n\\n@media only screen and (min-width: 731px) {\\n    .categories__tab .mat-list {\\n      display: flex; } }\\n\\n.categories__tab .mat-list-base button {\\n  color: #9E9E9E; }\\n\\n.categories__tab .actions {\\n  display: flex;\\n  color: #FFF; }\\n\\n@media only screen and (min-width: 731px) {\\n    .categories__tab .actions {\\n      display: none; } }\\n\\n.categories__tab /deep/ .mat-list-text h3 {\\n  color: #9fa8a3;\\n  text-align: left; }\\n\\n.categories__tab /deep/ .mat-list-text p {\\n  color: #FFF;\\n  text-align: left; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYXZpdmFsbHVyaS9EZXNrdG9wL21vdmllU2l0ZS9zcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5jb21wb25lbnQuc2NzcyIsIi9Vc2Vycy9yYXZpdmFsbHVyaS9EZXNrdG9wL21vdmllU2l0ZS9zcmMvYXNzZXRzL3Njc3MvcGFsZXR0ZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOztFQUVJLFlBQVksRUFBQTs7QUFJWDtFQUdPLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsbUJBQW1CLEVBQUE7O0FBTDFCO0VBUU8sT0FBTyxFQUFBOztBQVJkO0lBV1csbUJDZkksRUFBQTs7QURJZjtFQWVPLGFBQWEsRUFBQTs7QUFDYjtJQWhCUDtNQWlCVyxhQUFhLEVBQUEsRUFFcEI7O0FBbkJKO0VBdUJXLGNDN0JGLEVBQUE7O0FETVQ7RUEyQk8sYUFBYTtFQUNiLFdDcENBLEVBQUE7O0FEc0NBO0lBOUJQO01BK0JXLGFBQWEsRUFBQSxFQUVwQjs7QUFqQ0o7RUFvQ1csY0N6Q087RUQwQ1AsZ0JBQWdCLEVBQUE7O0FBckMzQjtFQXdDVyxXQ2hESjtFRGlESSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uL2Fzc2V0cy9zY3NzL3BhbGV0dGUnO1xuXG4uYnRuLWFkZC1jYXRlZ29yeSxcbi5idG4tZGVsZXRlLWNhdGVnb3J5IHtcbiAgICBjb2xvcjogd2hpdGU7XG59XG5cbi5jYXRlZ29yaWVzIHtcbiAgICAmX190YWIge1xuXG4gICAgICAgIC5tYXQtbmF2LWxpc3Qge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIGEubWF0LWxpc3QtaXRlbSB7XG4gICAgICAgICAgICBmbGV4OiAxO1xuXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAkYmFja2dyb3VuZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAubWF0LWxpc3Qge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzMxcHgpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5tYXQtbGlzdC1iYXNlIHtcbiAgXG4gICAgICAgICAgICBidXR0b24ge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkZ3JleTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuYWN0aW9ucyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcblxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3MzFweCkge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgL2RlZXAvIC5tYXQtbGlzdC10ZXh0IHtcbiAgICAgICAgICAgIGgzIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHByaW1hcnktbGlnaHQ7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIiR3aGl0ZTogI0ZGRjtcbiRibGFjazogI2M1ZDVjYjtcbiRncmV5OiAjOUU5RTlFO1xuJHByaW1hcnktbGlnaHQ6ICM5ZmE4YTM7XG4kYmFja2dyb3VuZDogI2UzZTBjZjtcbiRmYWNlYm9vazogIzQyNjdiMjtcbiR0d2l0dGVyOiAjNDI4NWY0O1xuJGdyZWVuOiAjNGNhZjUwO1xuJHllbGxvdzogI2ZmYzEwNztcbiR0ZWFsIDogIzAwOTY4ODsiXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DatabaseService } from '../shared/service/database/database.service';\nimport { MatDialog, MatSnackBar, MatTabChangeEvent } from '@angular/material';\nimport { MovieDatabaseModel } from '../shared/model/movie-database.model';\nimport { Subscription } from 'rxjs';\nimport { ShareModalComponent } from '../shared/component/share-modal/share-modal.component';\nimport { CategoriesAddModalComponent } from './categories-add-modal/categories-add-modal.component';\nimport { CategoriesDeleteModalComponent } from './categories-delete-modal/categories-delete-modal.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit, OnDestroy {\n  movies: Array<any>;\n  getCategories: Array<any>;\n  isLoadingResults: boolean;\n  sub: Subscription;\n  categories = [];\n\n  constructor(\n    private databaseService: DatabaseService,\n    public dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.isLoadingResults = true;\n    this.sub = this.databaseService.getMoviesCategoriesDefault('FavoriteMovie').subscribe(response => {\n      this.movies = response;\n      this.isLoadingResults = false;\n    });\n\n    this.sub = this.databaseService.getAllCategoriesUser().subscribe(response => {\n      this.getCategories = response;\n      this.categories = this.getCategories.map(value => value.name);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  cancelClick(event) {\n    event.stopPropagation();\n  }\n\n  tabChanged(event: MatTabChangeEvent) {\n    const name = event.tab.textLabel;\n    if (event.index !== 0) {\n      this.sub = this.databaseService.getMovieCategory(name).subscribe(response => {\n        this.movies = response;\n      });\n    } else {\n      this.sub = this.databaseService.getMoviesCategoriesDefault('FavoriteMovie').subscribe(response => {\n        this.movies = response;\n      });\n    }\n  }\n\n  deleteMovieFromFavorites(id: number, event) {\n    event.stopPropagation();\n    this.databaseService.deleteMoviesCategoriesDefault('FavoriteMovie', id, (error) => {\n        if (error) {\n          this.snackBar.open(error, 'Hide', { duration: 5000 });\n        } else {\n          this.translateService.get('Error.List-updated').subscribe(results => this.snackBar.open(results, '', { duration: 2000 }));\n        }\n    });\n  }\n\n  deleteMovieFromCategory(category: string, id: number) {\n    this.databaseService.deleteMovieCategory(category, id, (error) => {\n      if (error) {\n        this.snackBar.open(error, 'Hide', { duration: 5000 });\n      } else {\n        this.translateService.get('Error.List-updated').subscribe(results => this.snackBar.open(results, '', { duration: 2000 }));\n      }\n    });\n  }\n\n  shareDialog(movie: MovieDatabaseModel) {\n    this.dialog.open(ShareModalComponent, {\n      data: { id: movie.movieId, original_title: movie.original_title }\n    });\n  }\n\n  addCategoryDialog() {\n    const dialogRef = this.dialog.open(CategoriesAddModalComponent, {\n      data: {name: '' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.databaseService.addCategories(result, (error) => {\n          if (error) {\n            this.snackBar.open(error, 'hide', { duration: 5000});\n          } else {\n            this.translateService.get('Error.List-updated').subscribe(results => this.snackBar.open(results, '', { duration: 2000 }));\n          }\n        });\n      }\n    });\n  }\n\n  deleteCategoryDialog() {\n    const dialogRef = this.dialog.open(CategoriesDeleteModalComponent, {\n      width: '250px',\n      data: {name: '' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.databaseService.deleteCategories(result, (error) => {\n          if (error) {\n            this.snackBar.open(error, 'hide', { duration: 5000});\n          } else {\n            this.translateService.get('Error.List-updated').subscribe(results => this.snackBar.open(results, '', { duration: 2000 }));\n          }\n        });\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoriesRoutingModule } from './categories-routing.module';\nimport { CategoriesComponent } from './categories.component';\nimport { CategoriesAddModalComponent } from './categories-add-modal/categories-add-modal.component';\nimport { CategoriesDeleteModalComponent } from './categories-delete-modal/categories-delete-modal.component';\n\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CategoriesRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    CategoriesComponent,\n    CategoriesAddModalComponent,\n    CategoriesDeleteModalComponent\n  ],\n  entryComponents: [\n    CategoriesAddModalComponent,\n    CategoriesDeleteModalComponent\n  ]\n})\nexport class CategoriesModule { }\n"],"sourceRoot":""}